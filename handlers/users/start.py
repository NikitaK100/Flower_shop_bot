import secrets

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import ParseMode
from aiogram.utils.markdown import hcode

from keyboard.inline.buy_coins import keyboard_buy_coins
from keyboard.inline.get_referal_code import keyboard_identifier
from loader import dp, bot
from aiogram import types

from utils.db_api.schemas import users_db


@dp.message_handler(Command('start'))
async def start(message: types.Message):
    user_id = message.from_user.id
    user_name = message.from_user.full_name
    check_user = await users_db.select_user_by_id(id=user_id)
    message_user = message.text.replace('/start ', '')
    check_referal = await users_db.select_user_by_referal_link(message_user)                                      # /start chich

    if not await users_db.select_user_by_id(id=user_id):                                                          # –µ—Å–ª–∏ id —é–∑–µ—Ä–∞ –Ω–µ—Ç—É –≤ –±–∞–∑–µ —Ç–æ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        if check_referal:                                                                                         # –µ—Å–ª–∏ —Ä–µ—Ñ–∏—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –µ—Å—Ç—å –≤ –ë–î —Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —é–∑–µ—Ä–∞
            create_code = secrets.token_hex(6)                                                                    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –¥–ª—è –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ —é–∑–µ—Ä–∞
            await users_db.add_item(id=user_id, name=user_name, referal_link=create_code, wallet=0)               # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞

            owner = await users_db.select_user_by_referal_link(referal_link=message_user)                         # —É–∑–Ω–∞—ë–º —á—å—è —Å—Å—ã–ª–∫–∞
            await users_db.update_wallet_by_id(id=owner.id, wallet=owner.wallet + 10)                             # –ø–ª–∞—Ç–∏–º –µ–º—É 10
            owner_wallet = await users_db.select_user_by_referal_link(referal_link=message_user)
            await bot.send_message(chat_id=owner.id,
                                   text=f'–ö—Ç–æ —Ç–æ –ø–µ—Ä–µ—à—ë–ª –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ!\n'
                                        f'–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ 10 –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤\n\n'
                                        f'–í–∞—à –±–∞–ª–∞–Ω—Å: {str(owner_wallet.wallet)}‚ÇΩ',
                                   reply_markup=keyboard_buy_coins)                                     # —Å–æ–æ–±—â–∏–ª–∏

            user_in_db = await users_db.select_user_by_id(id=user_id)        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            await message.answer('–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n\n'
                                 f'<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b>\n\n'
                                 f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n'
                                 f'https://t.me/test_zikibot?start={create_code}\n\n'
                                 f'–ö–æ–¥ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: {create_code}\n'
                                 f'–í–∞—à –±–∞–ª–∞–Ω—Å: {str(user_in_db.wallet)}',
                                 reply_markup=keyboard_buy_coins)

    if await users_db.select_user_by_id(id=user_id):
        user_in_db = await users_db.select_user_by_id(id=user_id)
        try:
            await message.answer(f'<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b>\n\n'
                                f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n'
                                f'https://t.me/test_zikibot?start={check_user.referal_link}\n\n'
                                f'–ö–æ–¥ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: {check_user.referal_link}\n\n'
                                f'–í–∞—à –±–∞–ª–∞–Ω—Å: {str(user_in_db.wallet)}‚ÇΩ',
                                 reply_markup=keyboard_buy_coins)
        except AttributeError as err:
            print(f'{err}')
    else:
        await message.answer('<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</b>\n\n'
                             '–ú–µ–Ω—è –∑–æ–≤—É—Ç FlowersStoreBotüåπ\n\n'
                             '–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è\n'
                             '–ª–∏–±–æ –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ',
                             reply_markup=keyboard_identifier)


@dp.callback_query_handler(text='input_id')
async def where_code(call: types.CallbackQuery, state: FSMContext):
    await call.answer()
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:')
    await state.set_state('get_invite_code')


@dp.message_handler(state='get_invite_code')
async def get_code(message: types.Message, state: FSMContext):
    invite_code = message.text
    if not await users_db.select_user_by_referal_link(invite_code):
        await state.reset_state()
        await message.answer('–¢–∞–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
                             reply_markup=keyboard_identifier)

    if await users_db.select_user_by_referal_link(invite_code):
        await message.answer(f"<a href='https://t.me/test_zikibot?start={invite_code}'> –í–∞—à–∞ —Å—Å—ã–ª–∫–∞: </a>\n"
                             f'<pre>https://t.me/test_zikibot?start={invite_code}</pre>')
        await state.finish()







